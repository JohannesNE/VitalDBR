load_case(c("BIS/EMG","Primus/INSP_DES"), 1)
# Brugeren inputter én eller flere tnames i load_case, f.eks. c(BIS/EMG, Primus/INSP_DES, Solar8000/BT)
# Brugeren inputter også ét (og kun ét) case id. f.eks. "17"
# Funktionen samler nu alle "tids" forbundet med de forskellige tnames i case 1. ( i det her tilfælde 3 stk.)
# Funktionen kalder nu load_trks(tids), der kalder load_trk(tid) som kalder load vdb (der henter fra api) på alle tid i tids
# dermed bliver der returnet 3 tidsserier c(BIS/EMG, Primus/INSP_DES, Solar8000/BT), der alle tilhører case 17
load_VDB <- function(file_url) {
con <- gzcon(url(file_url))
txt <- readLines(con)
return(read.csv(textConnection(txt)))
}
load_trk <- function(tid){
print("load_trk")
start <- "https://api.vitaldb.net/"
end <- ".csv.gz"
# start + tid + end
url <- paste(start, tid, end, sep="")
return(load_VDB(url))
}
load_trks <- function(tids){
data <- data.frame(NA_col = rep(NA, length(tids)))
index <- 1
for (i in 1:nrow(tids)){
data[index] <- load_trk(tids[i])
index <- index+1
}
return(data)
}
load_case <- function(tnames, caseid){
# Den her skal retrieve Tids
tracks <- load_VDB("https://api.vitaldb.net/trks.csv.gz")
tracks <- tracks[tracks$caseid == caseid,]
tids <- data.frame(col = rep(NA, length(tnames)))
index <- 1
for (tname in tnames){
#extract tids where tname = tname
tids$col[index] <- (tracks[tracks$tname == tname,])$tid
index <- index+1
}
load_trks(tids)
}
load_case(c("BIS/EMG","Primus/INSP_DES"), 1)
# Brugeren inputter én eller flere tnames i load_case, f.eks. c(BIS/EMG, Primus/INSP_DES, Solar8000/BT)
# Brugeren inputter også ét (og kun ét) case id. f.eks. "17"
# Funktionen samler nu alle "tids" forbundet med de forskellige tnames i case 1. ( i det her tilfælde 3 stk.)
# Funktionen kalder nu load_trks(tids), der kalder load_trk(tid) som kalder load vdb (der henter fra api) på alle tid i tids
# dermed bliver der returnet 3 tidsserier c(BIS/EMG, Primus/INSP_DES, Solar8000/BT), der alle tilhører case 17
load_VDB <- function(file_url) {
con <- gzcon(url(file_url))
txt <- readLines(con)
return(read.csv(textConnection(txt)))
}
load_trk <- function(tid){
print("load_trk")
start <- "https://api.vitaldb.net/"
end <- ".csv.gz"
# start + tid + end
url <- paste(start, tid, end, sep="")
return(load_VDB(url))
}
load_trks <- function(tids){
data <- data.frame(NA_col = rep(NA, length(tids)))
index <- 1
for (i in 1:nrow(tids)){
data[index] <- load_trk(tids[i,])
index <- index+1
}
return(data)
}
load_case <- function(tnames, caseid){
# Den her skal retrieve Tids
tracks <- load_VDB("https://api.vitaldb.net/trks.csv.gz")
tracks <- tracks[tracks$caseid == caseid,]
tids <- data.frame(col = rep(NA, length(tnames)))
index <- 1
for (tname in tnames){
#extract tids where tname = tname
tids$col[index] <- (tracks[tracks$tname == tname,])$tid
index <- index+1
}
load_trks(tids)
}
load_case(c("BIS/EMG","Primus/INSP_DES"), 1)
# Brugeren inputter én eller flere tnames i load_case, f.eks. c(BIS/EMG, Primus/INSP_DES, Solar8000/BT)
# Brugeren inputter også ét (og kun ét) case id. f.eks. "17"
# Funktionen samler nu alle "tids" forbundet med de forskellige tnames i case 1. ( i det her tilfælde 3 stk.)
# Funktionen kalder nu load_trks(tids), der kalder load_trk(tid) som kalder load vdb (der henter fra api) på alle tid i tids
# dermed bliver der returnet 3 tidsserier c(BIS/EMG, Primus/INSP_DES, Solar8000/BT), der alle tilhører case 17
load_VDB <- function(file_url) {
con <- gzcon(url(file_url))
txt <- readLines(con)
return(read.csv(textConnection(txt)))
}
load_trk <- function(tid){
print("load_trk")
start <- "https://api.vitaldb.net/"
end <- ".csv.gz"
# start + tid + end
url <- paste(start, tid, end, sep="")
return(load_VDB(url))
}
load_trks <- function(tids){
data <- data.frame(col = rep(NA, length(tids)))
index <- 1
for (i in 1:nrow(tids)){
data$col[index] <- load_trk(tids[i,])
index <- index+1
}
return(data)
}
load_case <- function(tnames, caseid){
tracks <- load_VDB("https://api.vitaldb.net/trks.csv.gz")
tracks <- tracks[tracks$caseid == caseid,]
tids <- data.frame(col = rep(NA, length(tnames)))
index <- 1
for (tname in tnames){
tids$col[index] <- (tracks[tracks$tname == tname,])$tid
index <- index+1
}
load_trks(tids)
}
load_case(c("BIS/EMG","Primus/INSP_DES"), 1)
# Brugeren inputter én eller flere tnames i load_case, f.eks. c(BIS/EMG, Primus/INSP_DES, Solar8000/BT)
# Brugeren inputter også ét (og kun ét) case id. f.eks. "17"
# Funktionen samler nu alle "tids" forbundet med de forskellige tnames i case 1. ( i det her tilfælde 3 stk.)
# Funktionen kalder nu load_trks(tids), der kalder load_trk(tid) som kalder load vdb (der henter fra api) på alle tid i tids
# dermed bliver der returnet 3 tidsserier c(BIS/EMG, Primus/INSP_DES, Solar8000/BT), der alle tilhører case 17
load_VDB <- function(file_url) {
con <- gzcon(url(file_url))
txt <- readLines(con)
return(read.csv(textConnection(txt)))
}
load_trk <- function(tid){
print("load_trk")
start <- "https://api.vitaldb.net/"
end <- ".csv.gz"
# start + tid + end
url <- paste(start, tid, end, sep="")
return(load_VDB(url))
}
load_trks <- function(tids){
data <- data.frame()
index <- 1
for (i in 1:nrow(tids)){
data[index] <- load_trk(tids[i,])
index <- index+1
}
return(data)
}
load_case <- function(tnames, caseid){
tracks <- load_VDB("https://api.vitaldb.net/trks.csv.gz")
tracks <- tracks[tracks$caseid == caseid,]
tids <- data.frame(col = rep(NA, length(tnames)))
index <- 1
for (tname in tnames){
tids$col[index] <- (tracks[tracks$tname == tname,])$tid
index <- index+1
}
load_trks(tids)
}
load_case(c("BIS/EMG","Primus/INSP_DES"), 1)
# Brugeren inputter én eller flere tnames i load_case, f.eks. c(BIS/EMG, Primus/INSP_DES, Solar8000/BT)
# Brugeren inputter også ét (og kun ét) case id. f.eks. "17"
# Funktionen samler nu alle "tids" forbundet med de forskellige tnames i case 1. ( i det her tilfælde 3 stk.)
# Funktionen kalder nu load_trks(tids), der kalder load_trk(tid) som kalder load vdb (der henter fra api) på alle tid i tids
# dermed bliver der returnet 3 tidsserier c(BIS/EMG, Primus/INSP_DES, Solar8000/BT), der alle tilhører case 17
load_VDB <- function(file_url) {
con <- gzcon(url(file_url))
txt <- readLines(con)
return(read.csv(textConnection(txt)))
}
load_trk <- function(tid){
print("load_trk")
start <- "https://api.vitaldb.net/"
end <- ".csv.gz"
# start + tid + end
url <- paste(start, tid, end, sep="")
return(load_VDB(url))
}
load_trks <- function(tids){
data <- data.frame()
index <- 1
for (i in 1:nrow(tids)){
data[index] <- load_trk(tids[i,])
index <- index+1
}
return(data)
}
load_case <- function(tnames, caseid){
tracks <- load_VDB("https://api.vitaldb.net/trks.csv.gz")
tracks <- tracks[tracks$caseid == caseid,]
tids <- data.frame(col = rep(NA, length(tnames)))
index <- 1
for (tname in tnames){
tids$col[index] <- (tracks[tracks$tname == tname,])$tid
index <- index+1
}
load_trks(tids)
}
load_case("BIS/EMG", 1)
# Brugeren inputter én eller flere tnames i load_case, f.eks. c(BIS/EMG, Primus/INSP_DES, Solar8000/BT)
# Brugeren inputter også ét (og kun ét) case id. f.eks. "17"
# Funktionen samler nu alle "tids" forbundet med de forskellige tnames i case 1. ( i det her tilfælde 3 stk.)
# Funktionen kalder nu load_trks(tids), der kalder load_trk(tid) som kalder load vdb (der henter fra api) på alle tid i tids
# dermed bliver der returnet 3 tidsserier c(BIS/EMG, Primus/INSP_DES, Solar8000/BT), der alle tilhører case 17
load_VDB <- function(file_url) {
con <- gzcon(url(file_url))
txt <- readLines(con)
return(read.csv(textConnection(txt)))
}
load_trk <- function(tid){
print("load_trk")
start <- "https://api.vitaldb.net/"
end <- ".csv.gz"
# start + tid + end
url <- paste(start, tid, end, sep="")
print(load_VDB(url))
return(load_VDB(url))
}
load_trks <- function(tids){
data <- data.frame()
index <- 1
for (i in 1:nrow(tids)){
data[index] <- load_trk(tids[i,])
index <- index+1
}
return(data)
}
load_case <- function(tnames, caseid){
tracks <- load_VDB("https://api.vitaldb.net/trks.csv.gz")
tracks <- tracks[tracks$caseid == caseid,]
tids <- data.frame(col = rep(NA, length(tnames)))
index <- 1
for (tname in tnames){
tids$col[index] <- (tracks[tracks$tname == tname,])$tid
index <- index+1
}
load_trks(tids)
}
load_case("BIS/EMG", 1)
# Brugeren inputter én eller flere tnames i load_case, f.eks. c(BIS/EMG, Primus/INSP_DES, Solar8000/BT)
# Brugeren inputter også ét (og kun ét) case id. f.eks. "17"
# Funktionen samler nu alle "tids" forbundet med de forskellige tnames i case 1. ( i det her tilfælde 3 stk.)
# Funktionen kalder nu load_trks(tids), der kalder load_trk(tid) som kalder load vdb (der henter fra api) på alle tid i tids
# dermed bliver der returnet 3 tidsserier c(BIS/EMG, Primus/INSP_DES, Solar8000/BT), der alle tilhører case 17
load_VDB <- function(file_url) {
con <- gzcon(url(file_url))
txt <- readLines(con)
return(read.csv(textConnection(txt)))
}
load_trk <- function(tid){
print("load_trk")
start <- "https://api.vitaldb.net/"
end <- ".csv.gz"
# start + tid + end
url <- paste(start, tid, end, sep="")
print(load_VDB(url))
return(load_VDB(url))
}
load_trks <- function(tids){
data <- data.frame()
index <- 1
for (i in 1:nrow(tids)){
print(tids[i,])
data[index] <- load_trk(tids[i,])
index <- index+1
}
return(data)
}
load_case <- function(tnames, caseid){
tracks <- load_VDB("https://api.vitaldb.net/trks.csv.gz")
tracks <- tracks[tracks$caseid == caseid,]
tids <- data.frame(col = rep(NA, length(tnames)))
index <- 1
for (tname in tnames){
tids$col[index] <- (tracks[tracks$tname == tname,])$tid
index <- index+1
}
load_trks(tids)
}
load_case("BIS/EMG", 1)
# Brugeren inputter én eller flere tnames i load_case, f.eks. c(BIS/EMG, Primus/INSP_DES, Solar8000/BT)
# Brugeren inputter også ét (og kun ét) case id. f.eks. "17"
# Funktionen samler nu alle "tids" forbundet med de forskellige tnames i case 1. ( i det her tilfælde 3 stk.)
# Funktionen kalder nu load_trks(tids), der kalder load_trk(tid) som kalder load vdb (der henter fra api) på alle tid i tids
# dermed bliver der returnet 3 tidsserier c(BIS/EMG, Primus/INSP_DES, Solar8000/BT), der alle tilhører case 17
load_VDB <- function(file_url) {
con <- gzcon(url(file_url))
txt <- readLines(con)
return(read.csv(textConnection(txt)))
}
load_trk <- function(tid){
start <- "https://api.vitaldb.net/"
end <- ".csv.gz"
# start + tid + end
url <- paste(start, tid, end, sep="")
print(load_VDB(url))
return(load_VDB(url))
}
load_trks <- function(tids){
data <- data.frame()
index <- 1
for (i in 1:nrow(tids)){
print(tids[i,])
data[index] <- load_trk(tids[i,])
index <- index+1
}
return(data)
}
load_case <- function(tnames, caseid){
tracks <- load_VDB("https://api.vitaldb.net/trks.csv.gz")
tracks <- tracks[tracks$caseid == caseid,]
tids <- data.frame(col = rep(NA, length(tnames)))
index <- 1
for (tname in tnames){
tids$col[index] <- (tracks[tracks$tname == tname,])$tid
index <- index+1
}
load_trks(tids)
}
load_case("BIS/EMG", 1)
# Brugeren inputter én eller flere tnames i load_case, f.eks. c(BIS/EMG, Primus/INSP_DES, Solar8000/BT)
# Brugeren inputter også ét (og kun ét) case id. f.eks. "17"
# Funktionen samler nu alle "tids" forbundet med de forskellige tnames i case 1. ( i det her tilfælde 3 stk.)
# Funktionen kalder nu load_trks(tids), der kalder load_trk(tid) som kalder load vdb (der henter fra api) på alle tid i tids
# dermed bliver der returnet 3 tidsserier c(BIS/EMG, Primus/INSP_DES, Solar8000/BT), der alle tilhører case 17
load_VDB <- function(file_url) {
con <- gzcon(url(file_url))
txt <- readLines(con)
return(read.csv(textConnection(txt)))
}
load_trk <- function(tid){
start <- "https://api.vitaldb.net/"
end <- ".csv.gz"
# start + tid + end
url <- paste(start, tid, end, sep="")
print(load_VDB(url))
return(load_VDB(url))
}
load_trks <- function(tids){
data <- data.frame()
index <- 1
for (i in 1:nrow(tids)){
load_trk(tids[i,])
index <- index+1
}
return(data)
}
load_case <- function(tnames, caseid){
tracks <- load_VDB("https://api.vitaldb.net/trks.csv.gz")
tracks <- tracks[tracks$caseid == caseid,]
tids <- data.frame(col = rep(NA, length(tnames)))
index <- 1
for (tname in tnames){
tids$col[index] <- (tracks[tracks$tname == tname,])$tid
index <- index+1
}
load_trks(tids)
}
load_case("BIS/EMG", 1)
# Brugeren inputter én eller flere tnames i load_case, f.eks. c(BIS/EMG, Primus/INSP_DES, Solar8000/BT)
# Brugeren inputter også ét (og kun ét) case id. f.eks. "17"
# Funktionen samler nu alle "tids" forbundet med de forskellige tnames i case 1. ( i det her tilfælde 3 stk.)
# Funktionen kalder nu load_trks(tids), der kalder load_trk(tid) som kalder load vdb (der henter fra api) på alle tid i tids
# dermed bliver der returnet 3 tidsserier c(BIS/EMG, Primus/INSP_DES, Solar8000/BT), der alle tilhører case 17
load_VDB <- function(file_url) {
con <- gzcon(url(file_url))
txt <- readLines(con)
return(read.csv(textConnection(txt)))
}
load_trk <- function(tid){
start <- "https://api.vitaldb.net/"
end <- ".csv.gz"
# start + tid + end
url <- paste(start, tid, end, sep="")
print(load_VDB(url))
return(load_VDB(url))
}
load_trks <- function(tids){
data <- data.frame()
index <- 1
for (i in 1:nrow(tids)){
load_trk(tids[i,])
index <- index+1
}
}
load_case <- function(tnames, caseid){
tracks <- load_VDB("https://api.vitaldb.net/trks.csv.gz")
tracks <- tracks[tracks$caseid == caseid,]
tids <- data.frame(col = rep(NA, length(tnames)))
index <- 1
for (tname in tnames){
tids$col[index] <- (tracks[tracks$tname == tname,])$tid
index <- index+1
}
load_trks(tids)
}
load_case("BIS/EMG", 1)
# Brugeren inputter én eller flere tnames i load_case, f.eks. c(BIS/EMG, Primus/INSP_DES, Solar8000/BT)
# Brugeren inputter også ét (og kun ét) case id. f.eks. "17"
# Funktionen samler nu alle "tids" forbundet med de forskellige tnames i case 1. ( i det her tilfælde 3 stk.)
# Funktionen kalder nu load_trks(tids), der kalder load_trk(tid) som kalder load vdb (der henter fra api) på alle tid i tids
# dermed bliver der returnet 3 tidsserier c(BIS/EMG, Primus/INSP_DES, Solar8000/BT), der alle tilhører case 17
load_VDB <- function(file_url) {
con <- gzcon(url(file_url))
txt <- readLines(con)
return(read.csv(textConnection(txt)))
}
load_trk <- function(tid){
start <- "https://api.vitaldb.net/"
end <- ".csv.gz"
# start + tid + end
url <- paste(start, tid, end, sep="")
print(load_VDB(url))
return(load_VDB(url))
}
load_trks <- function(tids){
data <- data.frame()
index <- 1
for (i in 1:nrow(tids)){
load_trk(tids[i,])
index <- index+1
}
}
load_case <- function(tnames, caseid){
tracks <- load_VDB("https://api.vitaldb.net/trks.csv.gz")
tracks <- tracks[tracks$caseid == caseid,]
tids <- data.frame(col = rep(NA, length(tnames)))
index <- 1
for (tname in tnames){
tids$col[index] <- (tracks[tracks$tname == tname,])$tid
index <- index+1
}
load_trks(tids)
}
load_case("BIS/EMG","Solar8000/BT" 1)
# Brugeren inputter én eller flere tnames i load_case, f.eks. c(BIS/EMG, Primus/INSP_DES, Solar8000/BT)
# Brugeren inputter også ét (og kun ét) case id. f.eks. "17"
# Funktionen samler nu alle "tids" forbundet med de forskellige tnames i case 1. ( i det her tilfælde 3 stk.)
# Funktionen kalder nu load_trks(tids), der kalder load_trk(tid) som kalder load vdb (der henter fra api) på alle tid i tids
# dermed bliver der returnet 3 tidsserier c(BIS/EMG, Primus/INSP_DES, Solar8000/BT), der alle tilhører case 17
load_VDB <- function(file_url) {
con <- gzcon(url(file_url))
txt <- readLines(con)
return(read.csv(textConnection(txt)))
}
load_trk <- function(tid){
start <- "https://api.vitaldb.net/"
end <- ".csv.gz"
# start + tid + end
url <- paste(start, tid, end, sep="")
print(load_VDB(url))
return(load_VDB(url))
}
load_trks <- function(tids){
data <- data.frame()
index <- 1
for (i in 1:nrow(tids)){
load_trk(tids[i,])
index <- index+1
}
}
load_case <- function(tnames, caseid){
tracks <- load_VDB("https://api.vitaldb.net/trks.csv.gz")
tracks <- tracks[tracks$caseid == caseid,]
tids <- data.frame(col = rep(NA, length(tnames)))
index <- 1
for (tname in tnames){
tids$col[index] <- (tracks[tracks$tname == tname,])$tid
index <- index+1
}
load_trks(tids)
}
load_case("BIS/EMG","Solar8000/BT", 1)
# Brugeren inputter én eller flere tnames i load_case, f.eks. c(BIS/EMG, Primus/INSP_DES, Solar8000/BT)
# Brugeren inputter også ét (og kun ét) case id. f.eks. "17"
# Funktionen samler nu alle "tids" forbundet med de forskellige tnames i case 1. ( i det her tilfælde 3 stk.)
# Funktionen kalder nu load_trks(tids), der kalder load_trk(tid) som kalder load vdb (der henter fra api) på alle tid i tids
# dermed bliver der returnet 3 tidsserier c(BIS/EMG, Primus/INSP_DES, Solar8000/BT), der alle tilhører case 17
load_VDB <- function(file_url) {
con <- gzcon(url(file_url))
txt <- readLines(con)
return(read.csv(textConnection(txt)))
}
load_trk <- function(tid){
start <- "https://api.vitaldb.net/"
end <- ".csv.gz"
# start + tid + end
url <- paste(start, tid, end, sep="")
print(load_VDB(url))
return(load_VDB(url))
}
load_trks <- function(tids){
data <- data.frame()
index <- 1
for (i in 1:nrow(tids)){
load_trk(tids[i,])
index <- index+1
}
}
load_case <- function(tnames, caseid){
tracks <- load_VDB("https://api.vitaldb.net/trks.csv.gz")
tracks <- tracks[tracks$caseid == caseid,]
tids <- data.frame(col = rep(NA, length(tnames)))
index <- 1
for (tname in tnames){
tids$col[index] <- (tracks[tracks$tname == tname,])$tid
index <- index+1
}
load_trks(tids)
}
load_case(c("BIS/EMG","Solar8000/BT"), 1)
